!function(global, factory) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = factory(require("preact")) : "function" == typeof define && define.amd ? define([ "preact" ], factory) : global.preactViews = factory(global.preact);
}(this, function(preact) {
    function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) keys.indexOf(i) >= 0 || Object.prototype.hasOwnProperty.call(obj, i) && (target[i] = obj[i]);
        return target;
    }
    function _possibleConstructorReturn(self, call) {
        if (self) return !call || "object" != typeof call && "function" != typeof call ? self : call;
    }
    function _inherits(subClass, superClass) {
        "function" != typeof superClass && null !== superClass || (subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass));
    }
    function Link(_ref4, context) {
        var to = _ref4.to, params = _ref4.params, props = _objectWithoutProperties(_ref4, [ "to", "params" ]);
        return props.onClick || (props.onClick = function() {
            return context.route(to, params);
        }), preact.h("a", props);
    }
    var Views = function(_Component) {
        function Views() {
            for (var _temp, _this, _ret, _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
            return _temp = _this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [ this ].concat(args))), 
            _this.state = {
                view: _this.props.view,
                params: {}
            }, _this.route = function(view, params) {
                params = params || {}, _this.setState({
                    view: view,
                    params: params
                });
            }, _ret = _temp, _possibleConstructorReturn(_this, _ret);
        }
        return _inherits(Views, _Component), Views.prototype.componentWillReceiveProps = function(_ref) {
            var view = _ref.view;
            view !== this.props.view && this.route(view);
        }, Views.prototype.getChildContext = function() {
            return {
                route: this.route
            };
        }, Views.prototype.render = function(_ref2, _ref3) {
            var children = _ref2.children, view = _ref3.view, params = _ref3.params, child = children.filter(function(child) {
                return child.attributes.name === view;
            })[0];
            return child ? preact.cloneElement(child, params) : null;
        }, Views;
    }(preact.Component);
    return Views.Views = Views, Views.Link = Link, Views;
});
//# sourceMappingURL=preact-views.js.map